// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backend/api/pipeline.proto

package go_client // import "github.com/kubeflow/pipelines/backend/api/go_client"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Url struct {
	PipelineUrl          string   `protobuf:"bytes,1,opt,name=pipeline_url,json=pipelineUrl,proto3" json:"pipeline_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Url) Reset()         { *m = Url{} }
func (m *Url) String() string { return proto.CompactTextString(m) }
func (*Url) ProtoMessage()    {}
func (*Url) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{0}
}
func (m *Url) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Url.Unmarshal(m, b)
}
func (m *Url) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Url.Marshal(b, m, deterministic)
}
func (dst *Url) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Url.Merge(dst, src)
}
func (m *Url) XXX_Size() int {
	return xxx_messageInfo_Url.Size(m)
}
func (m *Url) XXX_DiscardUnknown() {
	xxx_messageInfo_Url.DiscardUnknown(m)
}

var xxx_messageInfo_Url proto.InternalMessageInfo

func (m *Url) GetPipelineUrl() string {
	if m != nil {
		return m.PipelineUrl
	}
	return ""
}

type CreatePipelineRequest struct {
	Pipeline             *Pipeline `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreatePipelineRequest) Reset()         { *m = CreatePipelineRequest{} }
func (m *CreatePipelineRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePipelineRequest) ProtoMessage()    {}
func (*CreatePipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{1}
}
func (m *CreatePipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePipelineRequest.Unmarshal(m, b)
}
func (m *CreatePipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePipelineRequest.Marshal(b, m, deterministic)
}
func (dst *CreatePipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePipelineRequest.Merge(dst, src)
}
func (m *CreatePipelineRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePipelineRequest.Size(m)
}
func (m *CreatePipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePipelineRequest proto.InternalMessageInfo

func (m *CreatePipelineRequest) GetPipeline() *Pipeline {
	if m != nil {
		return m.Pipeline
	}
	return nil
}

type GetPipelineRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPipelineRequest) Reset()         { *m = GetPipelineRequest{} }
func (m *GetPipelineRequest) String() string { return proto.CompactTextString(m) }
func (*GetPipelineRequest) ProtoMessage()    {}
func (*GetPipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{2}
}
func (m *GetPipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPipelineRequest.Unmarshal(m, b)
}
func (m *GetPipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPipelineRequest.Marshal(b, m, deterministic)
}
func (dst *GetPipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPipelineRequest.Merge(dst, src)
}
func (m *GetPipelineRequest) XXX_Size() int {
	return xxx_messageInfo_GetPipelineRequest.Size(m)
}
func (m *GetPipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPipelineRequest proto.InternalMessageInfo

func (m *GetPipelineRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListPipelinesRequest struct {
	PageToken            string   `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy               string   `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Filter               string   `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPipelinesRequest) Reset()         { *m = ListPipelinesRequest{} }
func (m *ListPipelinesRequest) String() string { return proto.CompactTextString(m) }
func (*ListPipelinesRequest) ProtoMessage()    {}
func (*ListPipelinesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{3}
}
func (m *ListPipelinesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelinesRequest.Unmarshal(m, b)
}
func (m *ListPipelinesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelinesRequest.Marshal(b, m, deterministic)
}
func (dst *ListPipelinesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelinesRequest.Merge(dst, src)
}
func (m *ListPipelinesRequest) XXX_Size() int {
	return xxx_messageInfo_ListPipelinesRequest.Size(m)
}
func (m *ListPipelinesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelinesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelinesRequest proto.InternalMessageInfo

func (m *ListPipelinesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListPipelinesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListPipelinesRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *ListPipelinesRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

type ListPipelinesResponse struct {
	Pipelines            []*Pipeline `protobuf:"bytes,1,rep,name=pipelines,proto3" json:"pipelines,omitempty"`
	TotalSize            int32       `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	NextPageToken        string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListPipelinesResponse) Reset()         { *m = ListPipelinesResponse{} }
func (m *ListPipelinesResponse) String() string { return proto.CompactTextString(m) }
func (*ListPipelinesResponse) ProtoMessage()    {}
func (*ListPipelinesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{4}
}
func (m *ListPipelinesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelinesResponse.Unmarshal(m, b)
}
func (m *ListPipelinesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelinesResponse.Marshal(b, m, deterministic)
}
func (dst *ListPipelinesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelinesResponse.Merge(dst, src)
}
func (m *ListPipelinesResponse) XXX_Size() int {
	return xxx_messageInfo_ListPipelinesResponse.Size(m)
}
func (m *ListPipelinesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelinesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelinesResponse proto.InternalMessageInfo

func (m *ListPipelinesResponse) GetPipelines() []*Pipeline {
	if m != nil {
		return m.Pipelines
	}
	return nil
}

func (m *ListPipelinesResponse) GetTotalSize() int32 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *ListPipelinesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type DeletePipelineRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePipelineRequest) Reset()         { *m = DeletePipelineRequest{} }
func (m *DeletePipelineRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePipelineRequest) ProtoMessage()    {}
func (*DeletePipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{5}
}
func (m *DeletePipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePipelineRequest.Unmarshal(m, b)
}
func (m *DeletePipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePipelineRequest.Marshal(b, m, deterministic)
}
func (dst *DeletePipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePipelineRequest.Merge(dst, src)
}
func (m *DeletePipelineRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePipelineRequest.Size(m)
}
func (m *DeletePipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePipelineRequest proto.InternalMessageInfo

func (m *DeletePipelineRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetTemplateRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTemplateRequest) Reset()         { *m = GetTemplateRequest{} }
func (m *GetTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*GetTemplateRequest) ProtoMessage()    {}
func (*GetTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{6}
}
func (m *GetTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTemplateRequest.Unmarshal(m, b)
}
func (m *GetTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTemplateRequest.Marshal(b, m, deterministic)
}
func (dst *GetTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTemplateRequest.Merge(dst, src)
}
func (m *GetTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_GetTemplateRequest.Size(m)
}
func (m *GetTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTemplateRequest proto.InternalMessageInfo

func (m *GetTemplateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetTemplateResponse struct {
	Template             string   `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTemplateResponse) Reset()         { *m = GetTemplateResponse{} }
func (m *GetTemplateResponse) String() string { return proto.CompactTextString(m) }
func (*GetTemplateResponse) ProtoMessage()    {}
func (*GetTemplateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{7}
}
func (m *GetTemplateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTemplateResponse.Unmarshal(m, b)
}
func (m *GetTemplateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTemplateResponse.Marshal(b, m, deterministic)
}
func (dst *GetTemplateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTemplateResponse.Merge(dst, src)
}
func (m *GetTemplateResponse) XXX_Size() int {
	return xxx_messageInfo_GetTemplateResponse.Size(m)
}
func (m *GetTemplateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTemplateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTemplateResponse proto.InternalMessageInfo

func (m *GetTemplateResponse) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

type GetPipelineVersionTemplateRequest struct {
	PipelineId           string   `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	VersionId            string   `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPipelineVersionTemplateRequest) Reset()         { *m = GetPipelineVersionTemplateRequest{} }
func (m *GetPipelineVersionTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*GetPipelineVersionTemplateRequest) ProtoMessage()    {}
func (*GetPipelineVersionTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{8}
}
func (m *GetPipelineVersionTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPipelineVersionTemplateRequest.Unmarshal(m, b)
}
func (m *GetPipelineVersionTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPipelineVersionTemplateRequest.Marshal(b, m, deterministic)
}
func (dst *GetPipelineVersionTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPipelineVersionTemplateRequest.Merge(dst, src)
}
func (m *GetPipelineVersionTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_GetPipelineVersionTemplateRequest.Size(m)
}
func (m *GetPipelineVersionTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPipelineVersionTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPipelineVersionTemplateRequest proto.InternalMessageInfo

func (m *GetPipelineVersionTemplateRequest) GetPipelineId() string {
	if m != nil {
		return m.PipelineId
	}
	return ""
}

func (m *GetPipelineVersionTemplateRequest) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

type CreatePipelineVersionRequest struct {
	PipelineId           string           `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	Version              *PipelineVersion `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreatePipelineVersionRequest) Reset()         { *m = CreatePipelineVersionRequest{} }
func (m *CreatePipelineVersionRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePipelineVersionRequest) ProtoMessage()    {}
func (*CreatePipelineVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{9}
}
func (m *CreatePipelineVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePipelineVersionRequest.Unmarshal(m, b)
}
func (m *CreatePipelineVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePipelineVersionRequest.Marshal(b, m, deterministic)
}
func (dst *CreatePipelineVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePipelineVersionRequest.Merge(dst, src)
}
func (m *CreatePipelineVersionRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePipelineVersionRequest.Size(m)
}
func (m *CreatePipelineVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePipelineVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePipelineVersionRequest proto.InternalMessageInfo

func (m *CreatePipelineVersionRequest) GetPipelineId() string {
	if m != nil {
		return m.PipelineId
	}
	return ""
}

func (m *CreatePipelineVersionRequest) GetVersion() *PipelineVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

type GetPipelineVersionRequest struct {
	PipelineId           string   `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	VersionId            string   `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPipelineVersionRequest) Reset()         { *m = GetPipelineVersionRequest{} }
func (m *GetPipelineVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetPipelineVersionRequest) ProtoMessage()    {}
func (*GetPipelineVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{10}
}
func (m *GetPipelineVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPipelineVersionRequest.Unmarshal(m, b)
}
func (m *GetPipelineVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPipelineVersionRequest.Marshal(b, m, deterministic)
}
func (dst *GetPipelineVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPipelineVersionRequest.Merge(dst, src)
}
func (m *GetPipelineVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetPipelineVersionRequest.Size(m)
}
func (m *GetPipelineVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPipelineVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPipelineVersionRequest proto.InternalMessageInfo

func (m *GetPipelineVersionRequest) GetPipelineId() string {
	if m != nil {
		return m.PipelineId
	}
	return ""
}

func (m *GetPipelineVersionRequest) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

type ListPipelineVersionsRequest struct {
	PipelineId           string   `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPipelineVersionsRequest) Reset()         { *m = ListPipelineVersionsRequest{} }
func (m *ListPipelineVersionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListPipelineVersionsRequest) ProtoMessage()    {}
func (*ListPipelineVersionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{11}
}
func (m *ListPipelineVersionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelineVersionsRequest.Unmarshal(m, b)
}
func (m *ListPipelineVersionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelineVersionsRequest.Marshal(b, m, deterministic)
}
func (dst *ListPipelineVersionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelineVersionsRequest.Merge(dst, src)
}
func (m *ListPipelineVersionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListPipelineVersionsRequest.Size(m)
}
func (m *ListPipelineVersionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelineVersionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelineVersionsRequest proto.InternalMessageInfo

func (m *ListPipelineVersionsRequest) GetPipelineId() string {
	if m != nil {
		return m.PipelineId
	}
	return ""
}

type ListPipelineVersionsResponse struct {
	Versions             []*PipelineVersion `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListPipelineVersionsResponse) Reset()         { *m = ListPipelineVersionsResponse{} }
func (m *ListPipelineVersionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListPipelineVersionsResponse) ProtoMessage()    {}
func (*ListPipelineVersionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{12}
}
func (m *ListPipelineVersionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelineVersionsResponse.Unmarshal(m, b)
}
func (m *ListPipelineVersionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelineVersionsResponse.Marshal(b, m, deterministic)
}
func (dst *ListPipelineVersionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelineVersionsResponse.Merge(dst, src)
}
func (m *ListPipelineVersionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListPipelineVersionsResponse.Size(m)
}
func (m *ListPipelineVersionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelineVersionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelineVersionsResponse proto.InternalMessageInfo

func (m *ListPipelineVersionsResponse) GetVersions() []*PipelineVersion {
	if m != nil {
		return m.Versions
	}
	return nil
}

type Pipeline struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Name                 string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	DefaultVersion       *PipelineVersion     `protobuf:"bytes,8,opt,name=default_version,json=defaultVersion,proto3" json:"default_version,omitempty"`
	Url                  *Url                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Error                string               `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Pipeline) Reset()         { *m = Pipeline{} }
func (m *Pipeline) String() string { return proto.CompactTextString(m) }
func (*Pipeline) ProtoMessage()    {}
func (*Pipeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{13}
}
func (m *Pipeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pipeline.Unmarshal(m, b)
}
func (m *Pipeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pipeline.Marshal(b, m, deterministic)
}
func (dst *Pipeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pipeline.Merge(dst, src)
}
func (m *Pipeline) XXX_Size() int {
	return xxx_messageInfo_Pipeline.Size(m)
}
func (m *Pipeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Pipeline.DiscardUnknown(m)
}

var xxx_messageInfo_Pipeline proto.InternalMessageInfo

func (m *Pipeline) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Pipeline) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Pipeline) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Pipeline) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Pipeline) GetDefaultVersion() *PipelineVersion {
	if m != nil {
		return m.DefaultVersion
	}
	return nil
}

func (m *Pipeline) GetUrl() *Url {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Pipeline) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type PipelineVersion struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Parameters           []*Parameter         `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty"`
	CodeSource           *CodeSource          `protobuf:"bytes,5,opt,name=code_source,json=codeSource,proto3" json:"code_source,omitempty"`
	Url                  *Url                 `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PipelineVersion) Reset()         { *m = PipelineVersion{} }
func (m *PipelineVersion) String() string { return proto.CompactTextString(m) }
func (*PipelineVersion) ProtoMessage()    {}
func (*PipelineVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{14}
}
func (m *PipelineVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipelineVersion.Unmarshal(m, b)
}
func (m *PipelineVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipelineVersion.Marshal(b, m, deterministic)
}
func (dst *PipelineVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipelineVersion.Merge(dst, src)
}
func (m *PipelineVersion) XXX_Size() int {
	return xxx_messageInfo_PipelineVersion.Size(m)
}
func (m *PipelineVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_PipelineVersion.DiscardUnknown(m)
}

var xxx_messageInfo_PipelineVersion proto.InternalMessageInfo

func (m *PipelineVersion) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PipelineVersion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PipelineVersion) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PipelineVersion) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *PipelineVersion) GetCodeSource() *CodeSource {
	if m != nil {
		return m.CodeSource
	}
	return nil
}

func (m *PipelineVersion) GetUrl() *Url {
	if m != nil {
		return m.Url
	}
	return nil
}

type CodeSource struct {
	RepoName             string   `protobuf:"bytes,1,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"`
	CommitSha            string   `protobuf:"bytes,2,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodeSource) Reset()         { *m = CodeSource{} }
func (m *CodeSource) String() string { return proto.CompactTextString(m) }
func (*CodeSource) ProtoMessage()    {}
func (*CodeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_c190f61969047fd9, []int{15}
}
func (m *CodeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeSource.Unmarshal(m, b)
}
func (m *CodeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeSource.Marshal(b, m, deterministic)
}
func (dst *CodeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeSource.Merge(dst, src)
}
func (m *CodeSource) XXX_Size() int {
	return xxx_messageInfo_CodeSource.Size(m)
}
func (m *CodeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeSource.DiscardUnknown(m)
}

var xxx_messageInfo_CodeSource proto.InternalMessageInfo

func (m *CodeSource) GetRepoName() string {
	if m != nil {
		return m.RepoName
	}
	return ""
}

func (m *CodeSource) GetCommitSha() string {
	if m != nil {
		return m.CommitSha
	}
	return ""
}

func init() {
	proto.RegisterType((*Url)(nil), "api.Url")
	proto.RegisterType((*CreatePipelineRequest)(nil), "api.CreatePipelineRequest")
	proto.RegisterType((*GetPipelineRequest)(nil), "api.GetPipelineRequest")
	proto.RegisterType((*ListPipelinesRequest)(nil), "api.ListPipelinesRequest")
	proto.RegisterType((*ListPipelinesResponse)(nil), "api.ListPipelinesResponse")
	proto.RegisterType((*DeletePipelineRequest)(nil), "api.DeletePipelineRequest")
	proto.RegisterType((*GetTemplateRequest)(nil), "api.GetTemplateRequest")
	proto.RegisterType((*GetTemplateResponse)(nil), "api.GetTemplateResponse")
	proto.RegisterType((*GetPipelineVersionTemplateRequest)(nil), "api.GetPipelineVersionTemplateRequest")
	proto.RegisterType((*CreatePipelineVersionRequest)(nil), "api.CreatePipelineVersionRequest")
	proto.RegisterType((*GetPipelineVersionRequest)(nil), "api.GetPipelineVersionRequest")
	proto.RegisterType((*ListPipelineVersionsRequest)(nil), "api.ListPipelineVersionsRequest")
	proto.RegisterType((*ListPipelineVersionsResponse)(nil), "api.ListPipelineVersionsResponse")
	proto.RegisterType((*Pipeline)(nil), "api.Pipeline")
	proto.RegisterType((*PipelineVersion)(nil), "api.PipelineVersion")
	proto.RegisterType((*CodeSource)(nil), "api.CodeSource")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PipelineServiceClient is the client API for PipelineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PipelineServiceClient interface {
	CreatePipeline(ctx context.Context, in *CreatePipelineRequest, opts ...grpc.CallOption) (*Pipeline, error)
	GetPipeline(ctx context.Context, in *GetPipelineRequest, opts ...grpc.CallOption) (*Pipeline, error)
	ListPipelines(ctx context.Context, in *ListPipelinesRequest, opts ...grpc.CallOption) (*ListPipelinesResponse, error)
	DeletePipeline(ctx context.Context, in *DeletePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetTemplate(ctx context.Context, in *GetTemplateRequest, opts ...grpc.CallOption) (*GetTemplateResponse, error)
	CreatePipelineVersion(ctx context.Context, in *CreatePipelineVersionRequest, opts ...grpc.CallOption) (*PipelineVersion, error)
	GetPipelineVersion(ctx context.Context, in *GetPipelineVersionRequest, opts ...grpc.CallOption) (*PipelineVersion, error)
	ListPipelineVersions(ctx context.Context, in *ListPipelineVersionsRequest, opts ...grpc.CallOption) (*ListPipelineVersionsResponse, error)
	GetPipelineVersionTemplate(ctx context.Context, in *GetPipelineVersionTemplateRequest, opts ...grpc.CallOption) (*GetTemplateResponse, error)
}

type pipelineServiceClient struct {
	cc *grpc.ClientConn
}

func NewPipelineServiceClient(cc *grpc.ClientConn) PipelineServiceClient {
	return &pipelineServiceClient{cc}
}

func (c *pipelineServiceClient) CreatePipeline(ctx context.Context, in *CreatePipelineRequest, opts ...grpc.CallOption) (*Pipeline, error) {
	out := new(Pipeline)
	err := c.cc.Invoke(ctx, "/api.PipelineService/CreatePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) GetPipeline(ctx context.Context, in *GetPipelineRequest, opts ...grpc.CallOption) (*Pipeline, error) {
	out := new(Pipeline)
	err := c.cc.Invoke(ctx, "/api.PipelineService/GetPipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) ListPipelines(ctx context.Context, in *ListPipelinesRequest, opts ...grpc.CallOption) (*ListPipelinesResponse, error) {
	out := new(ListPipelinesResponse)
	err := c.cc.Invoke(ctx, "/api.PipelineService/ListPipelines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) DeletePipeline(ctx context.Context, in *DeletePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.PipelineService/DeletePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) GetTemplate(ctx context.Context, in *GetTemplateRequest, opts ...grpc.CallOption) (*GetTemplateResponse, error) {
	out := new(GetTemplateResponse)
	err := c.cc.Invoke(ctx, "/api.PipelineService/GetTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) CreatePipelineVersion(ctx context.Context, in *CreatePipelineVersionRequest, opts ...grpc.CallOption) (*PipelineVersion, error) {
	out := new(PipelineVersion)
	err := c.cc.Invoke(ctx, "/api.PipelineService/CreatePipelineVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) GetPipelineVersion(ctx context.Context, in *GetPipelineVersionRequest, opts ...grpc.CallOption) (*PipelineVersion, error) {
	out := new(PipelineVersion)
	err := c.cc.Invoke(ctx, "/api.PipelineService/GetPipelineVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) ListPipelineVersions(ctx context.Context, in *ListPipelineVersionsRequest, opts ...grpc.CallOption) (*ListPipelineVersionsResponse, error) {
	out := new(ListPipelineVersionsResponse)
	err := c.cc.Invoke(ctx, "/api.PipelineService/ListPipelineVersions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) GetPipelineVersionTemplate(ctx context.Context, in *GetPipelineVersionTemplateRequest, opts ...grpc.CallOption) (*GetTemplateResponse, error) {
	out := new(GetTemplateResponse)
	err := c.cc.Invoke(ctx, "/api.PipelineService/GetPipelineVersionTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PipelineServiceServer is the server API for PipelineService service.
type PipelineServiceServer interface {
	CreatePipeline(context.Context, *CreatePipelineRequest) (*Pipeline, error)
	GetPipeline(context.Context, *GetPipelineRequest) (*Pipeline, error)
	ListPipelines(context.Context, *ListPipelinesRequest) (*ListPipelinesResponse, error)
	DeletePipeline(context.Context, *DeletePipelineRequest) (*empty.Empty, error)
	GetTemplate(context.Context, *GetTemplateRequest) (*GetTemplateResponse, error)
	CreatePipelineVersion(context.Context, *CreatePipelineVersionRequest) (*PipelineVersion, error)
	GetPipelineVersion(context.Context, *GetPipelineVersionRequest) (*PipelineVersion, error)
	ListPipelineVersions(context.Context, *ListPipelineVersionsRequest) (*ListPipelineVersionsResponse, error)
	GetPipelineVersionTemplate(context.Context, *GetPipelineVersionTemplateRequest) (*GetTemplateResponse, error)
}

func RegisterPipelineServiceServer(s *grpc.Server, srv PipelineServiceServer) {
	s.RegisterService(&_PipelineService_serviceDesc, srv)
}

func _PipelineService_CreatePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).CreatePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/CreatePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).CreatePipeline(ctx, req.(*CreatePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_GetPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).GetPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/GetPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).GetPipeline(ctx, req.(*GetPipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_ListPipelines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPipelinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).ListPipelines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/ListPipelines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).ListPipelines(ctx, req.(*ListPipelinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_DeletePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).DeletePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/DeletePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).DeletePipeline(ctx, req.(*DeletePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_GetTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).GetTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/GetTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).GetTemplate(ctx, req.(*GetTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_CreatePipelineVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePipelineVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).CreatePipelineVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/CreatePipelineVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).CreatePipelineVersion(ctx, req.(*CreatePipelineVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_GetPipelineVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPipelineVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).GetPipelineVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/GetPipelineVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).GetPipelineVersion(ctx, req.(*GetPipelineVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_ListPipelineVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPipelineVersionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).ListPipelineVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/ListPipelineVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).ListPipelineVersions(ctx, req.(*ListPipelineVersionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_GetPipelineVersionTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPipelineVersionTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).GetPipelineVersionTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/GetPipelineVersionTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).GetPipelineVersionTemplate(ctx, req.(*GetPipelineVersionTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PipelineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PipelineService",
	HandlerType: (*PipelineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePipeline",
			Handler:    _PipelineService_CreatePipeline_Handler,
		},
		{
			MethodName: "GetPipeline",
			Handler:    _PipelineService_GetPipeline_Handler,
		},
		{
			MethodName: "ListPipelines",
			Handler:    _PipelineService_ListPipelines_Handler,
		},
		{
			MethodName: "DeletePipeline",
			Handler:    _PipelineService_DeletePipeline_Handler,
		},
		{
			MethodName: "GetTemplate",
			Handler:    _PipelineService_GetTemplate_Handler,
		},
		{
			MethodName: "CreatePipelineVersion",
			Handler:    _PipelineService_CreatePipelineVersion_Handler,
		},
		{
			MethodName: "GetPipelineVersion",
			Handler:    _PipelineService_GetPipelineVersion_Handler,
		},
		{
			MethodName: "ListPipelineVersions",
			Handler:    _PipelineService_ListPipelineVersions_Handler,
		},
		{
			MethodName: "GetPipelineVersionTemplate",
			Handler:    _PipelineService_GetPipelineVersionTemplate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend/api/pipeline.proto",
}

func init() {
	proto.RegisterFile("backend/api/pipeline.proto", fileDescriptor_pipeline_c190f61969047fd9)
}

var fileDescriptor_pipeline_c190f61969047fd9 = []byte{
	// 1107 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x51, 0x4f, 0x1b, 0xc7,
	0x13, 0xff, 0x9f, 0x0d, 0xc6, 0x1e, 0x07, 0xd0, 0x7f, 0x03, 0xc1, 0x1c, 0x10, 0xcc, 0x35, 0xa2,
	0xa4, 0x6d, 0xce, 0x40, 0xa4, 0x4a, 0x49, 0x95, 0x56, 0x81, 0x46, 0x69, 0xa4, 0xa6, 0x42, 0x06,
	0xfa, 0x90, 0x3c, 0x9c, 0xd6, 0x77, 0x6b, 0x73, 0xe5, 0x7c, 0x7b, 0xdd, 0x5d, 0x93, 0x42, 0xc4,
	0x4b, 0xab, 0x3e, 0x54, 0x7d, 0xa8, 0xda, 0x7c, 0x8e, 0x7e, 0x9a, 0x7e, 0x85, 0x3e, 0xf7, 0x13,
	0xf4, 0xa1, 0xba, 0xbd, 0xdd, 0xf3, 0xdd, 0xd9, 0x46, 0xa0, 0xf6, 0xc9, 0xde, 0x99, 0xd9, 0x99,
	0xf9, 0xcd, 0xce, 0xfc, 0xe6, 0xc0, 0xec, 0x60, 0xf7, 0x94, 0x84, 0x5e, 0x0b, 0x47, 0x7e, 0x2b,
	0xf2, 0x23, 0x12, 0xf8, 0x21, 0xb1, 0x23, 0x46, 0x05, 0x45, 0x65, 0x1c, 0xf9, 0xe6, 0x6a, 0x8f,
	0xd2, 0x5e, 0x40, 0xa4, 0x1e, 0x87, 0x21, 0x15, 0x58, 0xf8, 0x34, 0xe4, 0x89, 0x89, 0xb9, 0xae,
	0xb4, 0xf2, 0xd4, 0x19, 0x74, 0x5b, 0xc2, 0xef, 0x13, 0x2e, 0x70, 0x3f, 0x52, 0x06, 0x2b, 0x45,
	0x03, 0xd2, 0x8f, 0xc4, 0xb9, 0x56, 0xe6, 0x82, 0x63, 0x86, 0xfb, 0x44, 0x10, 0xa6, 0x94, 0x4b,
	0x59, 0x25, 0x61, 0x8c, 0x6a, 0xc5, 0x47, 0xf2, 0xc7, 0x7d, 0xd0, 0x23, 0xe1, 0x03, 0xfe, 0x06,
	0xf7, 0x7a, 0x84, 0xb5, 0x68, 0x24, 0xb3, 0x1a, 0xcd, 0xd0, 0xda, 0x82, 0xf2, 0x31, 0x0b, 0xd0,
	0x06, 0xdc, 0xd2, 0xe8, 0x9c, 0x01, 0x0b, 0x1a, 0x46, 0xd3, 0xd8, 0xaa, 0xb5, 0xeb, 0x5a, 0x76,
	0xcc, 0x02, 0x6b, 0x0f, 0x16, 0xf7, 0x19, 0xc1, 0x82, 0x1c, 0x28, 0x61, 0x9b, 0x7c, 0x3b, 0x20,
	0x5c, 0xa0, 0xfb, 0x50, 0xd5, 0x76, 0xf2, 0x5e, 0x7d, 0x77, 0xd6, 0xc6, 0x91, 0x6f, 0xa7, 0x76,
	0xa9, 0xda, 0xba, 0x07, 0xe8, 0x39, 0x11, 0x45, 0x07, 0x73, 0x50, 0xf2, 0x3d, 0x15, 0xb2, 0xe4,
	0x7b, 0xd6, 0x0f, 0x06, 0x2c, 0x7c, 0xe9, 0xf3, 0xd4, 0x8e, 0x6b, 0xc3, 0x35, 0x80, 0x08, 0xf7,
	0x88, 0x23, 0xe8, 0x29, 0x09, 0xd5, 0x85, 0x5a, 0x2c, 0x39, 0x8a, 0x05, 0x68, 0x05, 0xe4, 0xc1,
	0xe1, 0xfe, 0x05, 0x69, 0x94, 0x9a, 0xc6, 0xd6, 0x74, 0xbb, 0x1a, 0x0b, 0x0e, 0xfd, 0x0b, 0x82,
	0x96, 0x60, 0x86, 0x53, 0x26, 0x9c, 0xce, 0x79, 0xa3, 0x2c, 0x2f, 0x56, 0xe2, 0xe3, 0xde, 0x39,
	0xba, 0x03, 0x95, 0xae, 0x1f, 0x08, 0xc2, 0x1a, 0x53, 0x89, 0x3c, 0x39, 0x59, 0x3f, 0x1b, 0xb0,
	0x58, 0xc8, 0x82, 0x47, 0x34, 0xe4, 0x04, 0x7d, 0x08, 0x35, 0x8d, 0x88, 0x37, 0x8c, 0x66, 0x79,
	0x14, 0xf1, 0x50, 0x1f, 0xe7, 0x2c, 0xa8, 0xc0, 0x41, 0x92, 0x55, 0x59, 0x66, 0x55, 0x93, 0x12,
	0x99, 0xd6, 0x26, 0xcc, 0x87, 0xe4, 0x3b, 0xe1, 0x64, 0x70, 0x95, 0x64, 0x1a, 0xb3, 0xb1, 0xf8,
	0x40, 0x63, 0xb3, 0xde, 0x87, 0xc5, 0xcf, 0x49, 0x40, 0x46, 0xab, 0x5f, 0x2c, 0x5e, 0x52, 0xe2,
	0x23, 0xd2, 0x8f, 0x02, 0x2c, 0x26, 0x5a, 0xed, 0xc0, 0xed, 0x9c, 0x95, 0x42, 0x66, 0x42, 0x55,
	0x28, 0x99, 0x32, 0x4e, 0xcf, 0x96, 0x0b, 0x1b, 0x99, 0xb7, 0xfb, 0x9a, 0x30, 0xee, 0xd3, 0xb0,
	0x18, 0x67, 0x1d, 0xd2, 0x9e, 0x71, 0xd2, 0x80, 0xa0, 0x45, 0x2f, 0xbc, 0xb8, 0x1c, 0x67, 0xc9,
	0xd5, 0x58, 0x9f, 0x40, 0xad, 0x29, 0xc9, 0x0b, 0xcf, 0xa2, 0xb0, 0x9a, 0x6f, 0x32, 0x15, 0xe7,
	0xda, 0xfe, 0x6d, 0x98, 0x51, 0xde, 0xa4, 0xf3, 0xfa, 0xee, 0x42, 0xee, 0x65, 0xb4, 0x3b, 0x6d,
	0x64, 0xbd, 0x86, 0xe5, 0x51, 0x54, 0xff, 0x15, 0x9a, 0x4f, 0x61, 0x25, 0xdb, 0x41, 0xca, 0x3b,
	0xbf, 0xae, 0x7b, 0xeb, 0x00, 0x56, 0xc7, 0xdf, 0x57, 0xcf, 0xb5, 0x0d, 0x55, 0x15, 0x4c, 0xf7,
	0xe1, 0x78, 0xb4, 0xa9, 0x95, 0xf5, 0xb7, 0x01, 0x55, 0xad, 0x2d, 0x36, 0x05, 0x7a, 0x04, 0xe0,
	0xca, 0xe2, 0x7b, 0x0e, 0x16, 0xaa, 0x7c, 0xa6, 0x9d, 0x30, 0x94, 0xad, 0x19, 0xca, 0x3e, 0xd2,
	0x14, 0xd6, 0xae, 0x29, 0xeb, 0xa7, 0x02, 0x21, 0x98, 0x0a, 0x71, 0x9f, 0xa8, 0xd1, 0x92, 0xff,
	0x51, 0x13, 0xea, 0x1e, 0xe1, 0x2e, 0xf3, 0x25, 0xf9, 0xa8, 0xe9, 0xca, 0x8a, 0xd0, 0x13, 0x98,
	0xf7, 0x48, 0x17, 0x0f, 0x02, 0xe1, 0xe8, 0x47, 0xab, 0x5e, 0xf1, 0x68, 0x73, 0xca, 0x58, 0x9d,
	0x91, 0x09, 0xe5, 0x98, 0xab, 0xa6, 0xe5, 0x95, 0xaa, 0xbc, 0x72, 0xcc, 0x82, 0x76, 0x2c, 0x44,
	0x0b, 0x30, 0x2d, 0x49, 0xb1, 0x51, 0x91, 0x61, 0x93, 0x83, 0xf5, 0x97, 0x01, 0xf3, 0x05, 0xaf,
	0x23, 0x55, 0xd0, 0x50, 0x4a, 0x19, 0x28, 0xf9, 0xca, 0x94, 0x6f, 0x52, 0x19, 0x3b, 0xe6, 0x2c,
	0x45, 0xdd, 0xbc, 0x31, 0x25, 0x5f, 0x69, 0x2e, 0x81, 0xa7, 0xc5, 0xed, 0x8c, 0x05, 0xda, 0x86,
	0xba, 0x4b, 0x3d, 0xe2, 0x70, 0x3a, 0x60, 0x2e, 0x51, 0xe0, 0xe6, 0xe5, 0x85, 0x7d, 0xea, 0x91,
	0x43, 0x29, 0x6e, 0x83, 0x9b, 0xfe, 0xd7, 0x65, 0xa8, 0x8c, 0x29, 0x83, 0xf5, 0x05, 0xc0, 0xf0,
	0x56, 0x4c, 0x90, 0x8c, 0x44, 0xd4, 0x91, 0xf8, 0xd4, 0x7c, 0xc7, 0x82, 0xaf, 0x62, 0x8c, 0x6b,
	0x00, 0x2e, 0xed, 0xf7, 0x7d, 0xe1, 0xf0, 0x13, 0xac, 0x7b, 0x39, 0x91, 0x1c, 0x9e, 0xe0, 0xdd,
	0x9f, 0x6a, 0xc3, 0xd2, 0x1d, 0x12, 0x76, 0xe6, 0xbb, 0x04, 0x75, 0x61, 0x2e, 0x3f, 0xad, 0xc8,
	0x4c, 0x12, 0x1d, 0xb7, 0x27, 0xcc, 0x3c, 0x47, 0x5a, 0xf7, 0xbf, 0xff, 0xe3, 0xcf, 0x77, 0xa5,
	0xf7, 0xac, 0xa5, 0x78, 0x83, 0xf1, 0xd6, 0xd9, 0x4e, 0x87, 0x08, 0xbc, 0x93, 0x2e, 0x59, 0xfe,
	0x38, 0x5d, 0x1b, 0xe8, 0x35, 0xd4, 0x33, 0x43, 0x8a, 0x96, 0xa4, 0xa3, 0xd1, 0x45, 0x52, 0x8c,
	0x70, 0x4f, 0x46, 0xb8, 0x8b, 0x56, 0x27, 0x44, 0x68, 0xbd, 0xf5, 0xbd, 0x4b, 0xd4, 0x83, 0xd9,
	0x1c, 0xcd, 0xa3, 0x65, 0xe9, 0x65, 0xdc, 0x02, 0x32, 0xcd, 0x71, 0xaa, 0x64, 0x18, 0xad, 0x75,
	0x19, 0x6d, 0x19, 0x4d, 0xc2, 0x83, 0xbe, 0x81, 0xb9, 0x3c, 0x85, 0xab, 0x6a, 0x8d, 0xe5, 0x75,
	0xf3, 0xce, 0x48, 0x7b, 0x3d, 0x8b, 0x3f, 0x0d, 0x34, 0xa8, 0x0f, 0xae, 0x06, 0x15, 0xc9, 0x8a,
	0x69, 0x76, 0x1e, 0x56, 0xac, 0xc0, 0xd7, 0x66, 0x63, 0x54, 0xa1, 0xe0, 0xd8, 0x32, 0xce, 0x16,
	0xda, 0xbc, 0x2a, 0x4e, 0x4b, 0x6f, 0x07, 0x8e, 0x7e, 0x35, 0x8a, 0xdf, 0x07, 0x7a, 0xc0, 0x36,
	0xc6, 0xf4, 0x44, 0x9e, 0x68, 0xcd, 0xb1, 0xf3, 0x6e, 0x7d, 0x26, 0x53, 0x78, 0x64, 0xd9, 0x13,
	0x53, 0xc8, 0xd0, 0xe7, 0x65, 0x4b, 0x93, 0xdc, 0x63, 0x4d, 0xee, 0xe8, 0x17, 0x23, 0xf7, 0xbd,
	0xa1, 0x13, 0xba, 0x5b, 0xec, 0x9f, 0x6b, 0x65, 0xb3, 0x2f, 0xb3, 0x79, 0x82, 0x3e, 0xb9, 0x59,
	0x36, 0xad, 0xb7, 0xc3, 0x0d, 0x71, 0x89, 0xde, 0x15, 0x3e, 0x6d, 0x34, 0xa5, 0xa3, 0xe6, 0x48,
	0x67, 0x15, 0xb6, 0x85, 0xb9, 0x71, 0x85, 0x85, 0x7a, 0xb3, 0x8f, 0x65, 0x8a, 0xdb, 0xe8, 0x86,
	0x05, 0x43, 0xbf, 0x1b, 0x60, 0x4e, 0xde, 0xed, 0x68, 0x73, 0x42, 0xbd, 0xae, 0xdf, 0x4c, 0x2f,
	0x65, 0x62, 0xcf, 0xd1, 0xb3, 0x7f, 0x51, 0xbb, 0x61, 0xaf, 0xed, 0xfd, 0x68, 0xfc, 0xf6, 0xf4,
	0x65, 0x7b, 0x15, 0x66, 0xd4, 0x42, 0x40, 0xff, 0x47, 0xf3, 0x30, 0x6b, 0xd6, 0x65, 0xfc, 0x43,
	0x81, 0xc5, 0x80, 0xbf, 0x5a, 0x87, 0x35, 0xa8, 0xec, 0x11, 0xcc, 0x08, 0x43, 0xb7, 0xab, 0x25,
	0x73, 0x16, 0x0f, 0xc4, 0x09, 0x65, 0xfe, 0x85, 0xfc, 0xfc, 0x6d, 0x96, 0x3a, 0xb7, 0x00, 0x52,
	0x83, 0xff, 0xbd, 0x7a, 0xd8, 0xf3, 0xc5, 0xc9, 0xa0, 0x63, 0xbb, 0xb4, 0xdf, 0x3a, 0x1d, 0x74,
	0x48, 0x37, 0xa0, 0x6f, 0x32, 0xf9, 0x65, 0x3f, 0xb6, 0x7b, 0xd4, 0x71, 0x03, 0x9f, 0x84, 0xa2,
	0x53, 0x91, 0xb3, 0xf9, 0xf0, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9a, 0xe6, 0x53, 0x9e, 0x26,
	0x0c, 0x00, 0x00,
}
