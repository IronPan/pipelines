apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: scheduledworkflows.kubeflow.org
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  group: kubeflow.org
  names:
    kind: ScheduledWorkflow
    listKind: ScheduledWorkflowList
    plural: scheduledworkflows
    shortNames:
      - swf
    singular: scheduledworkflow
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
  name: viewers.kubeflow.org
spec:
  group: kubeflow.org
  names:
    kind: Viewer
    listKind: ViewerList
    plural: viewers
    shortNames:
      - vi
    singular: viewer
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: workflows.argoproj.io
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  group: argoproj.io
  names:
    kind: Workflow
    plural: workflows
    shortNames:
      - wf
  scope: Namespaced
  version: v1alpha1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-pipeline-persistenceagent
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-pipeline-scheduledworkflow
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-pipeline-ui
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-pipeline-viewer-crd-service-account
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-pipeline
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline-runner
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: proxy-agent-runner
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-role
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/exec
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - create
      - delete
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
      - workflows/finalizers
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ml-pipeline-persistenceagent-role
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kubeflow.org
    resources:
      - scheduledworkflows
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app: ml-pipeline-scheduledworkflow-role
  name: ml-pipeline-scheduledworkflow-role
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - kubeflow.org
    resources:
      - scheduledworkflows
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app: ml-pipeline-ui
  name: ml-pipeline-ui
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
    verbs:
      - create
      - get
      - list
  - apiGroups:
      - kubeflow.org
    resources:
      - viewers
    verbs:
      - create
      - get
      - list
      - watch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ml-pipeline-viewer-controller-role
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
rules:
  - apiGroups:
      - '*'
    resources:
      - deployments
      - services
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - kubeflow.org
    resources:
      - viewers
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app: ml-pipeline
  name: ml-pipeline
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - delete
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - kubeflow.org
    resources:
      - scheduledworkflows
    verbs:
      - create
      - get
      - list
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pipeline-runner
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
      - persistentvolumeclaims
    verbs:
      - '*'
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs:
      - create
      - delete
      - get
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/exec
      - pods/log
      - services
    verbs:
      - '*'
  - apiGroups:
      - ""
      - apps
      - extensions
    resources:
      - deployments
      - replicasets
    verbs:
      - '*'
  - apiGroups:
      - kubeflow.org
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: proxy-agent-runner
    app.kubernetes.io/name: {{ .Release.Name }}
  name: proxy-agent-runner
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-binding
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-role
subjects:
  - kind: ServiceAccount
    name: argo
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ml-pipeline-persistenceagent-binding
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ml-pipeline-persistenceagent-role
subjects:
  - kind: ServiceAccount
    name: ml-pipeline-persistenceagent
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ml-pipeline-scheduledworkflow-binding
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ml-pipeline-scheduledworkflow-role
subjects:
  - kind: ServiceAccount
    name: ml-pipeline-scheduledworkflow
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app: ml-pipeline-ui
  name: ml-pipeline-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ml-pipeline-ui
subjects:
  - kind: ServiceAccount
    name: ml-pipeline-ui
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app: ml-pipeline
  name: ml-pipeline
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ml-pipeline
subjects:
  - kind: ServiceAccount
    name: ml-pipeline
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipeline-runner-binding
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pipeline-runner
subjects:
  - kind: ServiceAccount
    name: pipeline-runner
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app: proxy-agent-runner
  name: proxy-agent-runner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: proxy-agent-runner
subjects:
  - kind: ServiceAccount
    name: proxy-agent-runner
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ml-pipeline-viewer-crd-binding
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ml-pipeline-viewer-controller-role
subjects:
  - kind: ServiceAccount
    name: ml-pipeline-viewer-crd-service-account
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
data:
  config: |
    {
    namespace: {{ .Release.Namespace }},
    executorImage: {{ .Values.images.argoExecutor }},
    artifactRepository:
    {
        s3: {
            bucket: mlpipeline,
            keyPrefix: artifacts,
            endpoint: minio-service.{{ .Release.Namespace }}:9000,
            insecure: true,
            accessKeySecret: {
                name: mlpipeline-minio-artifact,
                key: accesskey
            },
            secretKeySecret: {
                name: mlpipeline-minio-artifact,
                key: secretkey
            }
        }
    }
    }
kind: ConfigMap
metadata:
  name: workflow-controller-configmap
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
data:
  accesskey: bWluaW8=
  secretkey: bWluaW8xMjM=
kind: Secret
metadata:
  name: mlpipeline-minio-artifact
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  ports:
    - port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: minio
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ml-pipeline-ui
    app.kubernetes.io/name: {{ .Release.Name }}
  name: ml-pipeline-ui
spec:
  ports:
    - port: 80
      targetPort: 3000
  selector:
    app: ml-pipeline-ui
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: ml-pipeline-visualizationserver
spec:
  ports:
    - name: http
      port: 8888
      protocol: TCP
      targetPort: 8888
  selector:
    app: ml-pipeline-visualizationserver
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: ml-pipeline
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  ports:
    - name: http
      port: 8888
      protocol: TCP
      targetPort: 8888
    - name: grpc
      port: 8887
      protocol: TCP
      targetPort: 8887
  selector:
    app: ml-pipeline
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
    app.kubernetes.io/name: {{ .Release.Name }}
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: minio
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: minio
      app.kubernetes.io/name: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - args:
            - server
            - /data
          env:
            - name: MINIO_ACCESS_KEY
              value: minio
            - name: MINIO_SECRET_KEY
              value: minio123
          image: {{ .Values.images.minio }}
          name: minio
          ports:
            - containerPort: 9000
          volumeMounts:
            - mountPath: /data
              name: data
              subPath: minio
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio-pvc
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-persistenceagent
    app.kubernetes.io/name: {{ .Release.Name }}
  name: ml-pipeline-persistenceagent
spec:
  selector:
    matchLabels:
      app: ml-pipeline-persistenceagent
      app.kubernetes.io/name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: ml-pipeline-persistenceagent
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
          image: {{ .Values.images.persistenceagent }}
          imagePullPolicy: IfNotPresent
          name: ml-pipeline-persistenceagent
      serviceAccountName: ml-pipeline-persistenceagent
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-scheduledworkflow
    app.kubernetes.io/name: {{ .Release.Name }}
  name: ml-pipeline-scheduledworkflow
spec:
  selector:
    matchLabels:
      app: ml-pipeline-scheduledworkflow
      app.kubernetes.io/name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: ml-pipeline-scheduledworkflow
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
          image: {{ .Values.images.scheduledworkflow }}
          imagePullPolicy: IfNotPresent
          name: ml-pipeline-scheduledworkflow
      serviceAccountName: ml-pipeline-scheduledworkflow
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-ui
    app.kubernetes.io/name: {{ .Release.Name }}
  name: ml-pipeline-ui
spec:
  selector:
    matchLabels:
      app: ml-pipeline-ui
      app.kubernetes.io/name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: ml-pipeline-ui
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - env:
            - name: MINIO_NAMESPACE
              value: {{ .Release.Namespace }}
          image: {{ .Values.images.frontend }}
          imagePullPolicy: IfNotPresent
          name: ml-pipeline-ui
          ports:
            - containerPort: 3000
      serviceAccountName: ml-pipeline-ui
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-viewer-crd
    app.kubernetes.io/name: {{ .Release.Name }}
  name: ml-pipeline-viewer-crd
spec:
  selector:
    matchLabels:
      app: ml-pipeline-viewer-crd
      app.kubernetes.io/name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: ml-pipeline-viewer-crd
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - env:
            - name: MAX_NUM_VIEWERS
              value: "50"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
          image: {{ .Values.images.viewerCrd }}
          imagePullPolicy: Always
          name: ml-pipeline-viewer-crd
      serviceAccountName: ml-pipeline-viewer-crd-service-account
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-visualizationserver
    app.kubernetes.io/name: {{ .Release.Name }}
  name: ml-pipeline-visualizationserver
spec:
  selector:
    matchLabels:
      app: ml-pipeline-visualizationserver
      app.kubernetes.io/name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: ml-pipeline-visualizationserver
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - image: {{ .Values.images.visualizationServer }}
          imagePullPolicy: IfNotPresent
          name: ml-pipeline-visualizationserver
          ports:
            - containerPort: 8888
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: ml-pipeline
    app.kubernetes.io/name: {{ .Release.Name }}
  name: ml-pipeline
spec:
  selector:
    matchLabels:
      app: ml-pipeline
      app.kubernetes.io/name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: ml-pipeline
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: {{ .Values.images.apiServer }}
          imagePullPolicy: IfNotPresent
          name: ml-pipeline-api-server
          ports:
            - containerPort: 8888
            - containerPort: 8887
      serviceAccountName: ml-pipeline
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: mysql
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: mysql
      app.kubernetes.io/name: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "true"
          image: {{ .Values.images.mysql }}
          name: mysql
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-persistent-storage
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: proxy-agent
    app.kubernetes.io/name: {{ .Release.Name }}
  name: proxy-agent
spec:
  selector:
    matchLabels:
      app: proxy-agent
      app.kubernetes.io/name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: proxy-agent
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - image: {{ .Values.images.proxyAgent }}
          imagePullPolicy: IfNotPresent
          name: proxy-agent
      serviceAccountName: proxy-agent-runner
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: workflow-controller
    app.kubernetes.io/name: {{ .Release.Name }}
  name: workflow-controller
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: workflow-controller
      app.kubernetes.io/name: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: workflow-controller
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - args:
            - --configmap
            - workflow-controller-configmap
            - --executor-image
            - {{ .Values.images.argoExecutor }}
          command:
            - workflow-controller
          env:
            - name: ARGO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: {{ .Values.images.argoWorkflowController }}
          imagePullPolicy: IfNotPresent
          name: workflow-controller
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: argo
      serviceAccountName: argo
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
